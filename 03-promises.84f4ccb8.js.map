{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEAD,EAAAE,OAAOC,KAAK,CACVC,SAAU,OACVC,kBAAmB,WACnBC,SAAU,OAEVC,QAAS,IACTC,aAAa,EAEbC,cAAc,IAGhB,IAAIC,EAAa,SAAAC,G,OAAYC,SAASC,cAAcF,E,EAGhDG,EAAQ,KACRC,EAAO,KACPC,EAAS,KASb,SAASC,IACPP,EAAW,UAAUQ,gBAAgB,W,CAHvCR,EAAW,SAASS,iBAAiB,UAYrC,SAAyBC,G,kBA8BzB,IAAuBC,EAAUC,EACzBC,GADeF,EApBLG,EAoBeF,EApBRR,EAqBjBS,EAAgBE,KAAKC,SAAW,GAE/B,IAAIC,SAAQ,SAACC,EAASC,GACdC,YAAW,WAClBP,EACFK,EAAQ,CAACP,WAAUU,MAAAT,IAEnBO,EAAO,CAACR,WAAUU,MAAAT,G,GAEnBA,E,KA7BAU,MAAK,SAAAC,G,IAAGZ,EAAQY,EAARZ,SAAUa,EAAKD,EAALF,MACjB/B,EAAAE,OAAOiC,QAAQ,uBAAwCC,OAAff,EAAS,QAAYe,OAANF,EAAM,M,IAE9DG,OAAM,SAAAJ,G,IAAGZ,EAAQY,EAARZ,SAAUiB,EAAKL,EAALF,MAClB/B,EAAAE,OAAOqC,QAAQ,sBAAqCH,OAAff,EAAS,QAAYe,OAANE,EAAM,M,IAE3DE,SAAQ,WAEHhB,IAAUR,GACZC,G,IAKNH,GAASC,C,EAxBXK,EAAMqB,iBACNxB,IAPAH,EAAQ4B,OAAOhC,EAAW,uBAAuBiC,OACjD5B,EAAO2B,OAAOhC,EAAW,sBAAsBiC,OAC/C3B,EAAS0B,OAAOhC,EAAW,wBAAwBiC,OAYnD,IAAK,IAAIC,EAAQ,EAAGA,GAAS5B,EAAQ4B,GAAS,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nNotify.init({\n  distance: '20px',\n  cssAnimationStyle: 'from-top',\n  fontSize: '18px',\n  // useFontAwesome: true,\n  timeout: 4000,\n  backOverlay: true,\n  // plainText: false,\n  clickToClose: true,\n});\n\nlet getElement = selector => document.querySelector(selector)\n\nlet intervalID = null;\nlet delay = null;\nlet step = null;\nlet amount = null;\n\n// console.log(getElement('.form'));\n// console.log(getElement('input[name=\"delay\"]'))\n// console.log(getElement('input[name=\"step\"]'))\n// console.log(getElement('input[name=\"amount\"]'))\n\ngetElement('.form').addEventListener('submit', onPromiseSubmit);\n\nfunction toggleButtonDisabled() {\n  getElement('button').toggleAttribute('disabled')\n};\n\nfunction onInputValues() {\n  delay = Number(getElement('input[name=\"delay\"]').value);\n  step = Number(getElement('input[name=\"step\"]').value);\n  amount = Number(getElement('input[name=\"amount\"]').value);\n}\n\nfunction onPromiseSubmit(event) {\n  event.preventDefault();\n  toggleButtonDisabled();\n  onInputValues();\n\n  // let delay = Number(getElement('input[name=\"delay\"]').value);\n  // let step = Number(getElement('input[name=\"step\"]').value);\n  // const amount = Number(getElement('input[name=\"amount\"]').value);\n\n  for (let index = 1; index <= amount; index += 1) {\n    createPromise(index, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n      .finally(() => {\n        // console.log(\"finally\");\n        if (index === amount) {\n          toggleButtonDisabled()\n          // console.log(\"finally\");\n        }\n      });\n\n    delay += step;\n  };\n  // console.log(delay);\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    intervalID = setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay})\n      } else {\n        reject({position, delay})\n      }\n    }, delay)\n  });\n};\n"],"names":["$h6c0i","parcelRequire","Notify","init","distance","cssAnimationStyle","fontSize","timeout","backOverlay","clickToClose","$ce04d3a99e08e73b$var$getElement","selector","document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$toggleButtonDisabled","toggleAttribute","addEventListener","event","position","delay3","shouldResolve","index","Math","random","Promise","resolve","reject","setTimeout","delay","then","param","delay1","success","concat","catch","delay2","failure","finally","preventDefault","Number","value","index1","_loop"],"version":3,"file":"03-promises.84f4ccb8.js.map"}